// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\test1\FilterTapSystolicPreAdd.v
// Created: 2023-10-04 18:26:37
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FilterTapSystolicPreAdd
// Source Path: test1/myCNT09/Discrete FIR Filter/FilterTapSystolicPreAdd
// Hierarchy Level: 2
// Model version: 1.17
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FilterTapSystolicPreAdd
          (clk,
           enb,
           din_re,
           preAddIn,
           coeff,
           sumIn,
           sumOut);


  input   clk;
  input   enb;
  input   signed [15:0] din_re;  // sfix16_En15
  input   signed [15:0] preAddIn;  // sfix16_En15
  input   signed [15:0] coeff;  // sfix16_En18
  input   signed [34:0] sumIn;  // sfix35_En33
  output  signed [34:0] sumOut;  // sfix35_En33


  reg signed [15:0] fTap_din1_reg1;  // sfix16
  reg signed [15:0] fTap_din1_reg2;  // sfix16
  reg signed [15:0] fTap_din1_reg3;  // sfix16
  reg signed [15:0] fTap_din2_reg1;  // sfix16
  reg signed [15:0] fTap_din2_reg2;  // sfix16
  reg signed [34:0] fTap_addout_reg;  // sfix35
  reg signed [15:0] fTap_coef_reg1;  // sfix16
  reg signed [15:0] fTap_coef_reg2;  // sfix16
  wire signed [34:0] fTap_addout_reg_next;  // sfix35_En33
  wire signed [16:0] fTap_add_cast;  // sfix17_En15
  wire signed [16:0] fTap_add_cast_1;  // sfix17_En15
  wire signed [16:0] fTap_add_temp;  // sfix17_En15
  wire signed [32:0] fTap_mul_temp;  // sfix33_En33
  wire signed [34:0] fTap_add_cast_2;  // sfix35_En33

  initial begin
    fTap_din1_reg1 = 16'sb0000000000000000;
    fTap_din1_reg2 = 16'sb0000000000000000;
    fTap_din1_reg3 = 16'sb0000000000000000;
    fTap_din2_reg1 = 16'sb0000000000000000;
    fTap_din2_reg2 = 16'sb0000000000000000;
    fTap_coef_reg1 = 16'sb0000000000000000;
    fTap_coef_reg2 = 16'sb0000000000000000;
    fTap_addout_reg = 35'sh000000000;
  end

  // FilterTapSystolicPreAddS
  always @(posedge clk)
    begin : fTap_process
      if (enb) begin
        fTap_addout_reg <= fTap_addout_reg_next;
        fTap_din1_reg3 <= fTap_din1_reg2;
        fTap_din1_reg2 <= fTap_din1_reg1;
        fTap_din1_reg1 <= din_re;
        fTap_din2_reg2 <= fTap_din2_reg1;
        fTap_din2_reg1 <= preAddIn;
        fTap_coef_reg2 <= fTap_coef_reg1;
        fTap_coef_reg1 <= coeff;
      end
    end

  assign sumOut = fTap_addout_reg;
  assign fTap_add_cast = {fTap_din1_reg3[15], fTap_din1_reg3};
  assign fTap_add_cast_1 = {fTap_din2_reg2[15], fTap_din2_reg2};
  assign fTap_add_temp = fTap_add_cast + fTap_add_cast_1;
  assign fTap_mul_temp = fTap_add_temp * fTap_coef_reg2;
  assign fTap_add_cast_2 = {{2{fTap_mul_temp[32]}}, fTap_mul_temp};
  assign fTap_addout_reg_next = fTap_add_cast_2 + sumIn;



endmodule  // FilterTapSystolicPreAdd

