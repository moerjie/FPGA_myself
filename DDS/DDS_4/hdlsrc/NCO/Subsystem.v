// -------------------------------------------------------------
// 
// File Name: F:\Git_Repository\FPGA_myself\DDS\DDS_4\hdlsrc\NCO\Subsystem.v
// Created: 2023-09-18 18:20:41
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Subsystem
// Source Path: NCO/Subsystem
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Subsystem
          (clk,
           reset,
           enb,
           In1,
           FIR_OUT,
           FIR_VALID_OUT,
           NCO_VALID_OUT);


  input   clk;
  input   reset;
  input   enb;
  input   [31:0] In1;  // uint32
  output  signed [7:0] FIR_OUT;  // sfix8_En6
  output  FIR_VALID_OUT;
  output  NCO_VALID_OUT;


  wire Constant_out1;
  wire signed [7:0] NCO_out1;  // sfix8_En7
  wire NCO_out2;
  wire signed [7:0] Discrete_FIR_Filter_out1;  // sfix8_En6
  wire Discrete_FIR_Filter_out2;


  assign Constant_out1 = 1'b1;



  NCO_block u_NCO (.clk(clk),
                   .reset(reset),
                   .enb(enb),
                   .inc(In1),  // uint32
                   .validIn(Constant_out1),
                   .sine(NCO_out1),  // sfix8_En7
                   .validOut(NCO_out2)
                   );

  Discrete_FIR_Filter u_Discrete_FIR_Filter (.clk(clk),
                                             .reset(reset),
                                             .enb(enb),
                                             .dataIn(NCO_out1),  // sfix8_En7
                                             .validIn(Constant_out1),
                                             .dataOut(Discrete_FIR_Filter_out1),  // sfix8_En6
                                             .validOut(Discrete_FIR_Filter_out2)
                                             );

  assign FIR_OUT = Discrete_FIR_Filter_out1;

  assign FIR_VALID_OUT = Discrete_FIR_Filter_out2;

  assign NCO_VALID_OUT = NCO_out2;

endmodule  // Subsystem

