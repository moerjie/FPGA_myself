// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\NCO\FilterTapSystolicPreAddWvlIn.v
// Created: 2023-09-14 19:11:18
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: FilterTapSystolicPreAddWvlIn
// Source Path: NCO/Subsystem/Discrete FIR Filter/Filter/subFilter/FilterTapSystolicPreAddWvlIn
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FilterTapSystolicPreAddWvlIn
          (clk,
           enb,
           dinReg2_0_re,
           dinPreAdd,
           coefIn_0,
           addin,
           dinRegVld,
           syncReset,
           dinDly2,
           tapout);


  input   clk;
  input   enb;
  input   signed [15:0] dinReg2_0_re;  // sfix16_En14
  input   signed [15:0] dinPreAdd;  // sfix16_En14
  input   signed [15:0] coefIn_0;  // sfix16_En17
  input   signed [43:0] addin;  // sfix44_En31
  input   dinRegVld;
  input   syncReset;
  output  signed [15:0] dinDly2;  // sfix16_En14
  output  signed [43:0] tapout;  // sfix44_En31


  reg signed [15:0] fTap_din1_reg1;  // sfix16
  reg signed [15:0] fTap_din1_reg2;  // sfix16
  reg signed [15:0] fTap_din1_reg3;  // sfix16
  reg signed [15:0] fTap_din2_reg1;  // sfix16
  reg signed [15:0] fTap_din2_reg2;  // sfix16
  reg signed [43:0] fTap_addout_reg;  // sfix44
  reg signed [15:0] fTap_coef_reg1;  // sfix16
  reg signed [15:0] fTap_coef_reg2;  // sfix16
  reg signed [15:0] fTap_din1_reg1_next;  // sfix16_En14
  reg signed [15:0] fTap_din1_reg2_next;  // sfix16_En14
  reg signed [15:0] fTap_din1_reg3_next;  // sfix16_En14
  reg signed [15:0] fTap_din2_reg1_next;  // sfix16_En14
  reg signed [15:0] fTap_din2_reg2_next;  // sfix16_En14
  reg signed [43:0] fTap_addout_reg_next;  // sfix44_En31
  reg signed [15:0] fTap_coef_reg1_next;  // sfix16_En17
  reg signed [15:0] fTap_coef_reg2_next;  // sfix16_En17
  reg signed [15:0] dinDly2_1;  // sfix16_En14
  reg signed [43:0] tapout_1;  // sfix44_En31
  reg signed [16:0] fTap_add_cast;  // sfix17_En14
  reg signed [16:0] fTap_add_cast_0;  // sfix17_En14
  reg signed [16:0] fTap_add_temp;  // sfix17_En14
  reg signed [32:0] fTap_mul_temp;  // sfix33_En31
  reg signed [43:0] fTap_add_cast_1;  // sfix44_En31

  initial begin
    fTap_din1_reg1 = 16'sb0000000000000000;
    fTap_din1_reg2 = 16'sb0000000000000000;
    fTap_din1_reg3 = 16'sb0000000000000000;
    fTap_din2_reg1 = 16'sb0000000000000000;
    fTap_din2_reg2 = 16'sb0000000000000000;
    fTap_coef_reg1 = 16'sb0000000000000000;
    fTap_coef_reg2 = 16'sb0000000000000000;
    fTap_addout_reg = 44'sh00000000000;
  end

  // FilterTapSystolicPreAddWvldIn
  always @(posedge clk)
    begin : fTap_process
      if (enb) begin
        if (syncReset == 1'b1) begin
          fTap_din1_reg1 <= 16'sb0000000000000000;
          fTap_din1_reg2 <= 16'sb0000000000000000;
          fTap_din1_reg3 <= 16'sb0000000000000000;
          fTap_din2_reg1 <= 16'sb0000000000000000;
          fTap_din2_reg2 <= 16'sb0000000000000000;
          fTap_coef_reg1 <= 16'sb0000000000000000;
          fTap_coef_reg2 <= 16'sb0000000000000000;
          fTap_addout_reg <= 44'sh00000000000;
        end
        else begin
          fTap_din1_reg1 <= fTap_din1_reg1_next;
          fTap_din1_reg2 <= fTap_din1_reg2_next;
          fTap_din1_reg3 <= fTap_din1_reg3_next;
          fTap_din2_reg1 <= fTap_din2_reg1_next;
          fTap_din2_reg2 <= fTap_din2_reg2_next;
          fTap_addout_reg <= fTap_addout_reg_next;
          fTap_coef_reg1 <= fTap_coef_reg1_next;
          fTap_coef_reg2 <= fTap_coef_reg2_next;
        end
      end
    end

  always @(addin, coefIn_0, dinPreAdd, dinReg2_0_re, dinRegVld, fTap_addout_reg,
       fTap_coef_reg1, fTap_coef_reg2, fTap_din1_reg1, fTap_din1_reg2,
       fTap_din1_reg3, fTap_din2_reg1, fTap_din2_reg2) begin
    fTap_add_temp = 17'sb00000000000000000;
    fTap_mul_temp = 33'sh000000000;
    fTap_add_cast = 17'sb00000000000000000;
    fTap_add_cast_0 = 17'sb00000000000000000;
    fTap_add_cast_1 = 44'sh00000000000;
    fTap_din1_reg1_next = fTap_din1_reg1;
    fTap_din1_reg2_next = fTap_din1_reg2;
    fTap_din1_reg3_next = fTap_din1_reg3;
    fTap_din2_reg1_next = fTap_din2_reg1;
    fTap_din2_reg2_next = fTap_din2_reg2;
    fTap_addout_reg_next = fTap_addout_reg;
    fTap_coef_reg1_next = fTap_coef_reg1;
    fTap_coef_reg2_next = fTap_coef_reg2;
    if (dinRegVld) begin
      fTap_add_cast = {fTap_din1_reg3[15], fTap_din1_reg3};
      fTap_add_cast_0 = {fTap_din2_reg2[15], fTap_din2_reg2};
      fTap_add_temp = fTap_add_cast + fTap_add_cast_0;
      fTap_mul_temp = fTap_add_temp * fTap_coef_reg2;
      fTap_add_cast_1 = {{11{fTap_mul_temp[32]}}, fTap_mul_temp};
      fTap_addout_reg_next = fTap_add_cast_1 + addin;
      fTap_din1_reg3_next = fTap_din1_reg2;
      fTap_din1_reg2_next = fTap_din1_reg1;
      fTap_din1_reg1_next = dinReg2_0_re;
      fTap_din2_reg2_next = fTap_din2_reg1;
      fTap_din2_reg1_next = dinPreAdd;
      fTap_coef_reg2_next = fTap_coef_reg1;
      fTap_coef_reg1_next = coefIn_0;
    end
    dinDly2_1 = fTap_din1_reg2;
    tapout_1 = fTap_addout_reg;
  end



  assign dinDly2 = dinDly2_1;

  assign tapout = tapout_1;

endmodule  // FilterTapSystolicPreAddWvlIn

