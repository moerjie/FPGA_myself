// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\DDS\Subsystem.v
// Created: 2023-09-20 16:09:04
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Subsystem
// Source Path: DDS/Subsystem
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Subsystem
          (clk,
           reset,
           enb,
           INC,
           FIR_OUT,
           NCO_VLD,
           FIR_VLD,
           NCO_OUT);


  input   clk;
  input   reset;
  input   enb;
  input   [15:0] INC;  // uint16
  output  signed [15:0] FIR_OUT;  // sfix16_En13
  output  NCO_VLD;
  output  FIR_VLD;
  output  signed [15:0] NCO_OUT;  // sfix16_En14


  wire Constant_out1;
  wire signed [15:0] NCO_out1;  // sfix16_En14
  wire NCO_out2;
  wire signed [15:0] Discrete_FIR_Filter_out1;  // sfix16_En13
  wire Discrete_FIR_Filter_out2;


  assign Constant_out1 = 1'b1;



  NCO u_NCO (.clk(clk),
             .reset(reset),
             .enb(enb),
             .inc(INC),  // uint16
             .validIn(Constant_out1),
             .sine(NCO_out1),  // sfix16_En14
             .validOut(NCO_out2)
             );

  Discrete_FIR_Filter u_Discrete_FIR_Filter (.clk(clk),
                                             .reset(reset),
                                             .enb(enb),
                                             .dataIn(NCO_out1),  // sfix16_En14
                                             .validIn(Constant_out1),
                                             .dataOut(Discrete_FIR_Filter_out1),  // sfix16_En13
                                             .validOut(Discrete_FIR_Filter_out2)
                                             );

  assign FIR_OUT = Discrete_FIR_Filter_out1;

  assign NCO_VLD = NCO_out2;

  assign FIR_VLD = Discrete_FIR_Filter_out2;

  assign NCO_OUT = NCO_out1;

endmodule  // Subsystem

