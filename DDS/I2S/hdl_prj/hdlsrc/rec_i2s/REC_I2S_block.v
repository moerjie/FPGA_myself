// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\rec_i2s\REC_I2S_block.v
// Created: 2023-10-27 19:54:39
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: REC_I2S_block
// Source Path: rec_i2s/REC_I2S
// Hierarchy Level: 1
// Model version: 1.35
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module REC_I2S_block
          (clk,
           reset,
           enb,
           RST,
           LRCLK_IN,
           SDATA_IN,
           PARA_OUT_L_0,
           PARA_OUT_L_1,
           PARA_OUT_L_2,
           PARA_OUT_L_3,
           PARA_OUT_L_4,
           PARA_OUT_L_5,
           PARA_OUT_L_6,
           PARA_OUT_L_7,
           PARA_OUT_L_8,
           PARA_OUT_L_9,
           PARA_OUT_L_10,
           PARA_OUT_L_11,
           PARA_OUT_L_12,
           PARA_OUT_L_13,
           PARA_OUT_L_14,
           PARA_OUT_L_15,
           PARA_OUT_R_0,
           PARA_OUT_R_1,
           PARA_OUT_R_2,
           PARA_OUT_R_3,
           PARA_OUT_R_4,
           PARA_OUT_R_5,
           PARA_OUT_R_6,
           PARA_OUT_R_7,
           PARA_OUT_R_8,
           PARA_OUT_R_9,
           PARA_OUT_R_10,
           PARA_OUT_R_11,
           PARA_OUT_R_12,
           PARA_OUT_R_13,
           PARA_OUT_R_14,
           PARA_OUT_R_15);


  input   clk;
  input   reset;
  input   enb;
  input   RST;
  input   LRCLK_IN;
  input   SDATA_IN;
  output  [15:0] PARA_OUT_L_0;  // uint16
  output  [15:0] PARA_OUT_L_1;  // uint16
  output  [15:0] PARA_OUT_L_2;  // uint16
  output  [15:0] PARA_OUT_L_3;  // uint16
  output  [15:0] PARA_OUT_L_4;  // uint16
  output  [15:0] PARA_OUT_L_5;  // uint16
  output  [15:0] PARA_OUT_L_6;  // uint16
  output  [15:0] PARA_OUT_L_7;  // uint16
  output  [15:0] PARA_OUT_L_8;  // uint16
  output  [15:0] PARA_OUT_L_9;  // uint16
  output  [15:0] PARA_OUT_L_10;  // uint16
  output  [15:0] PARA_OUT_L_11;  // uint16
  output  [15:0] PARA_OUT_L_12;  // uint16
  output  [15:0] PARA_OUT_L_13;  // uint16
  output  [15:0] PARA_OUT_L_14;  // uint16
  output  [15:0] PARA_OUT_L_15;  // uint16
  output  [15:0] PARA_OUT_R_0;  // uint16
  output  [15:0] PARA_OUT_R_1;  // uint16
  output  [15:0] PARA_OUT_R_2;  // uint16
  output  [15:0] PARA_OUT_R_3;  // uint16
  output  [15:0] PARA_OUT_R_4;  // uint16
  output  [15:0] PARA_OUT_R_5;  // uint16
  output  [15:0] PARA_OUT_R_6;  // uint16
  output  [15:0] PARA_OUT_R_7;  // uint16
  output  [15:0] PARA_OUT_R_8;  // uint16
  output  [15:0] PARA_OUT_R_9;  // uint16
  output  [15:0] PARA_OUT_R_10;  // uint16
  output  [15:0] PARA_OUT_R_11;  // uint16
  output  [15:0] PARA_OUT_R_12;  // uint16
  output  [15:0] PARA_OUT_R_13;  // uint16
  output  [15:0] PARA_OUT_R_14;  // uint16
  output  [15:0] PARA_OUT_R_15;  // uint16


  reg  Delay_out1;
  wire Logical_Operator_out1;
  wire HDL_FIFO_L_out1;
  wire [15:0] SIPO_16BIT_L_out1_0;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_1;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_2;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_3;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_4;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_5;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_6;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_7;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_8;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_9;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_10;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_11;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_12;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_13;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_14;  // uint16
  wire [15:0] SIPO_16BIT_L_out1_15;  // uint16
  wire HDL_FIFO_R_out1;
  wire [15:0] SIPO_16BIT_R_out1_0;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_1;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_2;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_3;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_4;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_5;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_6;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_7;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_8;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_9;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_10;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_11;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_12;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_13;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_14;  // uint16
  wire [15:0] SIPO_16BIT_R_out1_15;  // uint16

  // LRCLK为低电平时左声道输出，加载右声道数据


  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay_out1 <= SDATA_IN;
        end
      end
    end



  assign Logical_Operator_out1 =  ~ LRCLK_IN;



  HDL_FIFO_L u_HDL_FIFO_L (.clk(clk),
                           .reset(reset),
                           .enb(enb),
                           .In(Delay_out1),
                           .Push(Logical_Operator_out1),
                           .Pop(LRCLK_IN),
                           .rst(RST),
                           .Out(HDL_FIFO_L_out1)
                           );

  SIPO_16BIT_L u_SIPO_16BIT_L (.clk(clk),
                               .reset(reset),
                               .enb(enb),
                               .SERIAL_IN(HDL_FIFO_L_out1),
                               .PARA_OUT_0(SIPO_16BIT_L_out1_0),  // uint16
                               .PARA_OUT_1(SIPO_16BIT_L_out1_1),  // uint16
                               .PARA_OUT_2(SIPO_16BIT_L_out1_2),  // uint16
                               .PARA_OUT_3(SIPO_16BIT_L_out1_3),  // uint16
                               .PARA_OUT_4(SIPO_16BIT_L_out1_4),  // uint16
                               .PARA_OUT_5(SIPO_16BIT_L_out1_5),  // uint16
                               .PARA_OUT_6(SIPO_16BIT_L_out1_6),  // uint16
                               .PARA_OUT_7(SIPO_16BIT_L_out1_7),  // uint16
                               .PARA_OUT_8(SIPO_16BIT_L_out1_8),  // uint16
                               .PARA_OUT_9(SIPO_16BIT_L_out1_9),  // uint16
                               .PARA_OUT_10(SIPO_16BIT_L_out1_10),  // uint16
                               .PARA_OUT_11(SIPO_16BIT_L_out1_11),  // uint16
                               .PARA_OUT_12(SIPO_16BIT_L_out1_12),  // uint16
                               .PARA_OUT_13(SIPO_16BIT_L_out1_13),  // uint16
                               .PARA_OUT_14(SIPO_16BIT_L_out1_14),  // uint16
                               .PARA_OUT_15(SIPO_16BIT_L_out1_15)  // uint16
                               );

  assign PARA_OUT_L_0 = SIPO_16BIT_L_out1_0;

  assign PARA_OUT_L_1 = SIPO_16BIT_L_out1_1;

  assign PARA_OUT_L_2 = SIPO_16BIT_L_out1_2;

  assign PARA_OUT_L_3 = SIPO_16BIT_L_out1_3;

  assign PARA_OUT_L_4 = SIPO_16BIT_L_out1_4;

  assign PARA_OUT_L_5 = SIPO_16BIT_L_out1_5;

  assign PARA_OUT_L_6 = SIPO_16BIT_L_out1_6;

  assign PARA_OUT_L_7 = SIPO_16BIT_L_out1_7;

  assign PARA_OUT_L_8 = SIPO_16BIT_L_out1_8;

  assign PARA_OUT_L_9 = SIPO_16BIT_L_out1_9;

  assign PARA_OUT_L_10 = SIPO_16BIT_L_out1_10;

  assign PARA_OUT_L_11 = SIPO_16BIT_L_out1_11;

  assign PARA_OUT_L_12 = SIPO_16BIT_L_out1_12;

  assign PARA_OUT_L_13 = SIPO_16BIT_L_out1_13;

  assign PARA_OUT_L_14 = SIPO_16BIT_L_out1_14;

  assign PARA_OUT_L_15 = SIPO_16BIT_L_out1_15;

  HDL_FIFO_R u_HDL_FIFO_R (.clk(clk),
                           .reset(reset),
                           .enb(enb),
                           .In(Delay_out1),
                           .Push(LRCLK_IN),
                           .Pop(Logical_Operator_out1),
                           .rst(RST),
                           .Out(HDL_FIFO_R_out1)
                           );

  SIPO_16BIT_R u_SIPO_16BIT_R (.clk(clk),
                               .reset(reset),
                               .enb(enb),
                               .SERIAL_IN(HDL_FIFO_R_out1),
                               .PARA_OUT_0(SIPO_16BIT_R_out1_0),  // uint16
                               .PARA_OUT_1(SIPO_16BIT_R_out1_1),  // uint16
                               .PARA_OUT_2(SIPO_16BIT_R_out1_2),  // uint16
                               .PARA_OUT_3(SIPO_16BIT_R_out1_3),  // uint16
                               .PARA_OUT_4(SIPO_16BIT_R_out1_4),  // uint16
                               .PARA_OUT_5(SIPO_16BIT_R_out1_5),  // uint16
                               .PARA_OUT_6(SIPO_16BIT_R_out1_6),  // uint16
                               .PARA_OUT_7(SIPO_16BIT_R_out1_7),  // uint16
                               .PARA_OUT_8(SIPO_16BIT_R_out1_8),  // uint16
                               .PARA_OUT_9(SIPO_16BIT_R_out1_9),  // uint16
                               .PARA_OUT_10(SIPO_16BIT_R_out1_10),  // uint16
                               .PARA_OUT_11(SIPO_16BIT_R_out1_11),  // uint16
                               .PARA_OUT_12(SIPO_16BIT_R_out1_12),  // uint16
                               .PARA_OUT_13(SIPO_16BIT_R_out1_13),  // uint16
                               .PARA_OUT_14(SIPO_16BIT_R_out1_14),  // uint16
                               .PARA_OUT_15(SIPO_16BIT_R_out1_15)  // uint16
                               );

  assign PARA_OUT_R_0 = SIPO_16BIT_R_out1_0;

  assign PARA_OUT_R_1 = SIPO_16BIT_R_out1_1;

  assign PARA_OUT_R_2 = SIPO_16BIT_R_out1_2;

  assign PARA_OUT_R_3 = SIPO_16BIT_R_out1_3;

  assign PARA_OUT_R_4 = SIPO_16BIT_R_out1_4;

  assign PARA_OUT_R_5 = SIPO_16BIT_R_out1_5;

  assign PARA_OUT_R_6 = SIPO_16BIT_R_out1_6;

  assign PARA_OUT_R_7 = SIPO_16BIT_R_out1_7;

  assign PARA_OUT_R_8 = SIPO_16BIT_R_out1_8;

  assign PARA_OUT_R_9 = SIPO_16BIT_R_out1_9;

  assign PARA_OUT_R_10 = SIPO_16BIT_R_out1_10;

  assign PARA_OUT_R_11 = SIPO_16BIT_R_out1_11;

  assign PARA_OUT_R_12 = SIPO_16BIT_R_out1_12;

  assign PARA_OUT_R_13 = SIPO_16BIT_R_out1_13;

  assign PARA_OUT_R_14 = SIPO_16BIT_R_out1_14;

  assign PARA_OUT_R_15 = SIPO_16BIT_R_out1_15;

endmodule  // REC_I2S_block

