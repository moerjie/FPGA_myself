// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\rec_i2s\SIPO_16BIT_L.v
// Created: 2023-10-27 19:54:39
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: SIPO_16BIT_L
// Source Path: rec_i2s/REC_I2S/SIPO_16BIT_L
// Hierarchy Level: 2
// Model version: 1.35
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module SIPO_16BIT_L
          (clk,
           reset,
           enb,
           SERIAL_IN,
           PARA_OUT_0,
           PARA_OUT_1,
           PARA_OUT_2,
           PARA_OUT_3,
           PARA_OUT_4,
           PARA_OUT_5,
           PARA_OUT_6,
           PARA_OUT_7,
           PARA_OUT_8,
           PARA_OUT_9,
           PARA_OUT_10,
           PARA_OUT_11,
           PARA_OUT_12,
           PARA_OUT_13,
           PARA_OUT_14,
           PARA_OUT_15);


  input   clk;
  input   reset;
  input   enb;
  input   SERIAL_IN;
  output  [15:0] PARA_OUT_0;  // uint16
  output  [15:0] PARA_OUT_1;  // uint16
  output  [15:0] PARA_OUT_2;  // uint16
  output  [15:0] PARA_OUT_3;  // uint16
  output  [15:0] PARA_OUT_4;  // uint16
  output  [15:0] PARA_OUT_5;  // uint16
  output  [15:0] PARA_OUT_6;  // uint16
  output  [15:0] PARA_OUT_7;  // uint16
  output  [15:0] PARA_OUT_8;  // uint16
  output  [15:0] PARA_OUT_9;  // uint16
  output  [15:0] PARA_OUT_10;  // uint16
  output  [15:0] PARA_OUT_11;  // uint16
  output  [15:0] PARA_OUT_12;  // uint16
  output  [15:0] PARA_OUT_13;  // uint16
  output  [15:0] PARA_OUT_14;  // uint16
  output  [15:0] PARA_OUT_15;  // uint16


  wire SIPO_8BIT_out1_0;
  wire SIPO_8BIT_out1_1;
  wire SIPO_8BIT_out1_2;
  wire SIPO_8BIT_out1_3;
  wire SIPO_8BIT_out1_4;
  wire SIPO_8BIT_out1_5;
  wire SIPO_8BIT_out1_6;
  wire SIPO_8BIT_out1_7;
  wire SIPO_8BIT_out2;
  wire SIPO_8BIT1_out1_0;
  wire SIPO_8BIT1_out1_1;
  wire SIPO_8BIT1_out1_2;
  wire SIPO_8BIT1_out1_3;
  wire SIPO_8BIT1_out1_4;
  wire SIPO_8BIT1_out1_5;
  wire SIPO_8BIT1_out1_6;
  wire SIPO_8BIT1_out1_7;
  wire [15:0] Vector_Concatenate_out1;  // boolean [16]
  wire [15:0] Data_Type_Conversion_out1 [0:15];  // uint16 [16]


  SIPO_8BIT u_SIPO_8BIT (.clk(clk),
                         .reset(reset),
                         .enb(enb),
                         .SERIAL_IN(SERIAL_IN),
                         .PARA_OUT_0(SIPO_8BIT_out1_0),  // boolean
                         .PARA_OUT_1(SIPO_8BIT_out1_1),  // boolean
                         .PARA_OUT_2(SIPO_8BIT_out1_2),  // boolean
                         .PARA_OUT_3(SIPO_8BIT_out1_3),  // boolean
                         .PARA_OUT_4(SIPO_8BIT_out1_4),  // boolean
                         .PARA_OUT_5(SIPO_8BIT_out1_5),  // boolean
                         .PARA_OUT_6(SIPO_8BIT_out1_6),  // boolean
                         .PARA_OUT_7(SIPO_8BIT_out1_7),  // boolean
                         .SERIAL_OUT(SIPO_8BIT_out2)
                         );

  SIPO_8BIT1 u_SIPO_8BIT1 (.clk(clk),
                           .reset(reset),
                           .enb(enb),
                           .SERIAL_IN(SIPO_8BIT_out2),
                           .PARA_OUT_0(SIPO_8BIT1_out1_0),  // boolean
                           .PARA_OUT_1(SIPO_8BIT1_out1_1),  // boolean
                           .PARA_OUT_2(SIPO_8BIT1_out1_2),  // boolean
                           .PARA_OUT_3(SIPO_8BIT1_out1_3),  // boolean
                           .PARA_OUT_4(SIPO_8BIT1_out1_4),  // boolean
                           .PARA_OUT_5(SIPO_8BIT1_out1_5),  // boolean
                           .PARA_OUT_6(SIPO_8BIT1_out1_6),  // boolean
                           .PARA_OUT_7(SIPO_8BIT1_out1_7)  // boolean
                           );

  assign Vector_Concatenate_out1[0] = SIPO_8BIT1_out1_0;
  assign Vector_Concatenate_out1[1] = SIPO_8BIT1_out1_1;
  assign Vector_Concatenate_out1[2] = SIPO_8BIT1_out1_2;
  assign Vector_Concatenate_out1[3] = SIPO_8BIT1_out1_3;
  assign Vector_Concatenate_out1[4] = SIPO_8BIT1_out1_4;
  assign Vector_Concatenate_out1[5] = SIPO_8BIT1_out1_5;
  assign Vector_Concatenate_out1[6] = SIPO_8BIT1_out1_6;
  assign Vector_Concatenate_out1[7] = SIPO_8BIT1_out1_7;
  assign Vector_Concatenate_out1[8] = SIPO_8BIT_out1_0;
  assign Vector_Concatenate_out1[9] = SIPO_8BIT_out1_1;
  assign Vector_Concatenate_out1[10] = SIPO_8BIT_out1_2;
  assign Vector_Concatenate_out1[11] = SIPO_8BIT_out1_3;
  assign Vector_Concatenate_out1[12] = SIPO_8BIT_out1_4;
  assign Vector_Concatenate_out1[13] = SIPO_8BIT_out1_5;
  assign Vector_Concatenate_out1[14] = SIPO_8BIT_out1_6;
  assign Vector_Concatenate_out1[15] = SIPO_8BIT_out1_7;


  genvar ii1;
  generate
    for(ii1 = 32'sd0; ii1 <= 32'sd15; ii1 = ii1 + 32'sd1) begin:Data_Type_Conversion_out1_gen
      assign Data_Type_Conversion_out1[ii1] = {15'b0, Vector_Concatenate_out1[ii1]};
    end
  endgenerate




  assign PARA_OUT_0 = Data_Type_Conversion_out1[0];

  assign PARA_OUT_1 = Data_Type_Conversion_out1[1];

  assign PARA_OUT_2 = Data_Type_Conversion_out1[2];

  assign PARA_OUT_3 = Data_Type_Conversion_out1[3];

  assign PARA_OUT_4 = Data_Type_Conversion_out1[4];

  assign PARA_OUT_5 = Data_Type_Conversion_out1[5];

  assign PARA_OUT_6 = Data_Type_Conversion_out1[6];

  assign PARA_OUT_7 = Data_Type_Conversion_out1[7];

  assign PARA_OUT_8 = Data_Type_Conversion_out1[8];

  assign PARA_OUT_9 = Data_Type_Conversion_out1[9];

  assign PARA_OUT_10 = Data_Type_Conversion_out1[10];

  assign PARA_OUT_11 = Data_Type_Conversion_out1[11];

  assign PARA_OUT_12 = Data_Type_Conversion_out1[12];

  assign PARA_OUT_13 = Data_Type_Conversion_out1[13];

  assign PARA_OUT_14 = Data_Type_Conversion_out1[14];

  assign PARA_OUT_15 = Data_Type_Conversion_out1[15];

endmodule  // SIPO_16BIT_L

