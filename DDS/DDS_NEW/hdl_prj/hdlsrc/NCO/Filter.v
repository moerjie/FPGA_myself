// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\NCO\Filter.v
// Created: 2023-09-18 14:21:54
// 
// Generated by MATLAB 9.14 and HDL Coder 4.1
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Filter
// Source Path: NCO/Subsystem/Discrete FIR Filter/Filter
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Filter
          (clk,
           reset,
           enb,
           dataIn,
           validIn,
           syncReset,
           dataOut,
           validOut);


  input   clk;
  input   reset;
  input   enb;
  input   signed [7:0] dataIn;  // sfix8_En7
  input   validIn;
  input   syncReset;
  output  signed [7:0] dataOut;  // sfix8_En6
  output  validOut;


  reg  dinRegVld;
  reg signed [7:0] dinReg_0_re;  // sfix8_En7
  reg signed [7:0] dinReg2_0_re;  // sfix8_En7
  wire signed [7:0] CoefOut_0;  // sfix8_En8
  wire signed [7:0] CoefOut_1;  // sfix8_En8
  wire signed [7:0] CoefOut_2;  // sfix8_En8
  wire signed [7:0] CoefOut_3;  // sfix8_En8
  wire signed [7:0] CoefOut_4;  // sfix8_En8
  wire signed [7:0] CoefOut_5;  // sfix8_En8
  wire signed [7:0] CoefOut_6;  // sfix8_En8
  wire signed [7:0] CoefOut_7;  // sfix8_En8
  wire signed [7:0] CoefOut_8;  // sfix8_En8
  wire signed [7:0] CoefOut_9;  // sfix8_En8
  wire signed [7:0] CoefOut_10;  // sfix8_En8
  wire signed [7:0] CoefOut_11;  // sfix8_En8
  wire signed [7:0] CoefOut_12;  // sfix8_En8
  wire signed [7:0] CoefOut_13;  // sfix8_En8
  wire signed [7:0] CoefOut_14;  // sfix8_En8
  wire signed [7:0] CoefOut_15;  // sfix8_En8
  wire signed [7:0] CoefOut_16;  // sfix8_En8
  wire signed [7:0] CoefOut_17;  // sfix8_En8
  wire signed [7:0] CoefOut_18;  // sfix8_En8
  wire signed [7:0] CoefOut_19;  // sfix8_En8
  wire signed [7:0] CoefOut_20;  // sfix8_En8
  wire signed [7:0] CoefOut_21;  // sfix8_En8
  wire signed [7:0] CoefOut_22;  // sfix8_En8
  wire signed [7:0] CoefOut_23;  // sfix8_En8
  wire signed [7:0] CoefOut_24;  // sfix8_En8
  wire signed [7:0] CoefOut_25;  // sfix8_En8
  wire signed [7:0] CoefOut_26;  // sfix8_En8
  wire signed [7:0] CoefOut_27;  // sfix8_En8
  wire signed [7:0] CoefOut_28;  // sfix8_En8
  wire signed [7:0] CoefOut_29;  // sfix8_En8
  wire signed [7:0] CoefOut_30;  // sfix8_En8
  wire signed [7:0] CoefOut_31;  // sfix8_En8
  wire signed [7:0] CoefOut_32;  // sfix8_En8
  wire signed [7:0] CoefOut_33;  // sfix8_En8
  wire signed [7:0] CoefOut_34;  // sfix8_En8
  wire signed [7:0] CoefOut_35;  // sfix8_En8
  wire signed [7:0] CoefOut_36;  // sfix8_En8
  wire signed [7:0] CoefOut_37;  // sfix8_En8
  wire signed [7:0] CoefOut_38;  // sfix8_En8
  wire signed [7:0] CoefOut_39;  // sfix8_En8
  reg  dinReg2Vld;
  wire signed [7:0] dout_1_re;  // sfix8_En6
  wire doutVld;


  always @(posedge clk or posedge reset)
    begin : intdelay_process
      if (reset == 1'b1) begin
        dinRegVld <= 1'b0;
      end
      else begin
        if (enb) begin
          if (syncReset == 1'b1) begin
            dinRegVld <= 1'b0;
          end
          else begin
            dinRegVld <= validIn;
          end
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : intdelay_1_process
      if (reset == 1'b1) begin
        dinReg_0_re <= 8'sb00000000;
      end
      else begin
        if (enb) begin
          if (syncReset == 1'b1) begin
            dinReg_0_re <= 8'sb00000000;
          end
          else begin
            if (validIn) begin
              dinReg_0_re <= dataIn;
            end
          end
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : intdelay_2_process
      if (reset == 1'b1) begin
        dinReg2_0_re <= 8'sb00000000;
      end
      else begin
        if (enb) begin
          if (syncReset == 1'b1) begin
            dinReg2_0_re <= 8'sb00000000;
          end
          else begin
            if (dinRegVld) begin
              dinReg2_0_re <= dinReg_0_re;
            end
          end
        end
      end
    end



  FilterCoef u_CoefTable_1 (.CoefOut_0(CoefOut_0),  // sfix8_En8
                            .CoefOut_1(CoefOut_1),  // sfix8_En8
                            .CoefOut_2(CoefOut_2),  // sfix8_En8
                            .CoefOut_3(CoefOut_3),  // sfix8_En8
                            .CoefOut_4(CoefOut_4),  // sfix8_En8
                            .CoefOut_5(CoefOut_5),  // sfix8_En8
                            .CoefOut_6(CoefOut_6),  // sfix8_En8
                            .CoefOut_7(CoefOut_7),  // sfix8_En8
                            .CoefOut_8(CoefOut_8),  // sfix8_En8
                            .CoefOut_9(CoefOut_9),  // sfix8_En8
                            .CoefOut_10(CoefOut_10),  // sfix8_En8
                            .CoefOut_11(CoefOut_11),  // sfix8_En8
                            .CoefOut_12(CoefOut_12),  // sfix8_En8
                            .CoefOut_13(CoefOut_13),  // sfix8_En8
                            .CoefOut_14(CoefOut_14),  // sfix8_En8
                            .CoefOut_15(CoefOut_15),  // sfix8_En8
                            .CoefOut_16(CoefOut_16),  // sfix8_En8
                            .CoefOut_17(CoefOut_17),  // sfix8_En8
                            .CoefOut_18(CoefOut_18),  // sfix8_En8
                            .CoefOut_19(CoefOut_19),  // sfix8_En8
                            .CoefOut_20(CoefOut_20),  // sfix8_En8
                            .CoefOut_21(CoefOut_21),  // sfix8_En8
                            .CoefOut_22(CoefOut_22),  // sfix8_En8
                            .CoefOut_23(CoefOut_23),  // sfix8_En8
                            .CoefOut_24(CoefOut_24),  // sfix8_En8
                            .CoefOut_25(CoefOut_25),  // sfix8_En8
                            .CoefOut_26(CoefOut_26),  // sfix8_En8
                            .CoefOut_27(CoefOut_27),  // sfix8_En8
                            .CoefOut_28(CoefOut_28),  // sfix8_En8
                            .CoefOut_29(CoefOut_29),  // sfix8_En8
                            .CoefOut_30(CoefOut_30),  // sfix8_En8
                            .CoefOut_31(CoefOut_31),  // sfix8_En8
                            .CoefOut_32(CoefOut_32),  // sfix8_En8
                            .CoefOut_33(CoefOut_33),  // sfix8_En8
                            .CoefOut_34(CoefOut_34),  // sfix8_En8
                            .CoefOut_35(CoefOut_35),  // sfix8_En8
                            .CoefOut_36(CoefOut_36),  // sfix8_En8
                            .CoefOut_37(CoefOut_37),  // sfix8_En8
                            .CoefOut_38(CoefOut_38),  // sfix8_En8
                            .CoefOut_39(CoefOut_39)  // sfix8_En8
                            );

  always @(posedge clk or posedge reset)
    begin : intdelay_3_process
      if (reset == 1'b1) begin
        dinReg2Vld <= 1'b0;
      end
      else begin
        if (enb) begin
          if (syncReset == 1'b1) begin
            dinReg2Vld <= 1'b0;
          end
          else begin
            dinReg2Vld <= dinRegVld;
          end
        end
      end
    end



  subFilter u_subFilter_1_re (.clk(clk),
                              .reset(reset),
                              .enb(enb),
                              .dinReg2_0_re(dinReg2_0_re),  // sfix8_En7
                              .coefIn_0(CoefOut_0),  // sfix8_En8
                              .coefIn_1(CoefOut_1),  // sfix8_En8
                              .coefIn_2(CoefOut_2),  // sfix8_En8
                              .coefIn_3(CoefOut_3),  // sfix8_En8
                              .coefIn_4(CoefOut_4),  // sfix8_En8
                              .coefIn_5(CoefOut_5),  // sfix8_En8
                              .coefIn_6(CoefOut_6),  // sfix8_En8
                              .coefIn_7(CoefOut_7),  // sfix8_En8
                              .coefIn_8(CoefOut_8),  // sfix8_En8
                              .coefIn_9(CoefOut_9),  // sfix8_En8
                              .coefIn_10(CoefOut_10),  // sfix8_En8
                              .coefIn_11(CoefOut_11),  // sfix8_En8
                              .coefIn_12(CoefOut_12),  // sfix8_En8
                              .coefIn_13(CoefOut_13),  // sfix8_En8
                              .coefIn_14(CoefOut_14),  // sfix8_En8
                              .coefIn_15(CoefOut_15),  // sfix8_En8
                              .coefIn_16(CoefOut_16),  // sfix8_En8
                              .coefIn_17(CoefOut_17),  // sfix8_En8
                              .coefIn_18(CoefOut_18),  // sfix8_En8
                              .coefIn_19(CoefOut_19),  // sfix8_En8
                              .coefIn_20(CoefOut_20),  // sfix8_En8
                              .coefIn_21(CoefOut_21),  // sfix8_En8
                              .coefIn_22(CoefOut_22),  // sfix8_En8
                              .coefIn_23(CoefOut_23),  // sfix8_En8
                              .coefIn_24(CoefOut_24),  // sfix8_En8
                              .coefIn_25(CoefOut_25),  // sfix8_En8
                              .coefIn_26(CoefOut_26),  // sfix8_En8
                              .coefIn_27(CoefOut_27),  // sfix8_En8
                              .coefIn_28(CoefOut_28),  // sfix8_En8
                              .coefIn_29(CoefOut_29),  // sfix8_En8
                              .coefIn_30(CoefOut_30),  // sfix8_En8
                              .coefIn_31(CoefOut_31),  // sfix8_En8
                              .coefIn_32(CoefOut_32),  // sfix8_En8
                              .coefIn_33(CoefOut_33),  // sfix8_En8
                              .coefIn_34(CoefOut_34),  // sfix8_En8
                              .coefIn_35(CoefOut_35),  // sfix8_En8
                              .coefIn_36(CoefOut_36),  // sfix8_En8
                              .coefIn_37(CoefOut_37),  // sfix8_En8
                              .coefIn_38(CoefOut_38),  // sfix8_En8
                              .coefIn_39(CoefOut_39),  // sfix8_En8
                              .dinRegVld(dinReg2Vld),
                              .syncReset(syncReset),
                              .dout_1_re(dout_1_re),  // sfix8_En6
                              .doutVld(doutVld)
                              );

  assign dataOut = dout_1_re;

  assign validOut = doutVld;

endmodule  // Filter

